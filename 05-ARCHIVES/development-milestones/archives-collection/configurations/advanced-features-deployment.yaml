# Advanced Features: GraphQL API, Streaming, Mobile, Progressive Onboarding
apiVersion: v1
kind: ConfigMap
metadata:
  name: aia-advanced-features
  namespace: aia-comprehensive-platform
data:
  graphql-schema.graphql: |
    # AIA Enterprise GraphQL Schema
    type Query {
      # Enterprise Platform
      enterprises: [Enterprise!]!
      enterprise(id: ID!): Enterprise

      # AI Agents & Multi-Agent System
      agents: [AIAgent!]!
      agent(id: ID!): AIAgent
      agentCollaborations: [AgentCollaboration!]!

      # Analytics & Business Intelligence
      analytics(timeRange: TimeRange, filters: AnalyticsFilters): Analytics!
      realTimeMetrics: [Metric!]!
      financialAnalytics: FinancialAnalytics!

      # Industry Verticals
      financeData: FinanceData!
      healthcareMetrics: HealthcareMetrics!
      retailAnalytics: RetailAnalytics!
      manufacturingData: ManufacturingData!

      # Knowledge Graph
      knowledgeAtoms(category: String, limit: Int): [KnowledgeAtom!]!
      semanticSearch(query: String!): [SearchResult!]!

      # User Management & Onboarding
      currentUser: User
      onboardingProgress: OnboardingProgress!

      # Billing & Pricing
      pricingPlans: [PricingPlan!]!
      billingHistory: [Invoice!]!
      usageMetrics: UsageMetrics!
    }

    type Mutation {
      # AI Agent Operations
      createAgent(input: CreateAgentInput!): AIAgent!
      updateAgent(id: ID!, input: UpdateAgentInput!): AIAgent!
      deployAgent(id: ID!): DeploymentResult!

      # Enterprise Operations
      createEnterprise(input: CreateEnterpriseInput!): Enterprise!
      updatePricing(planId: ID!, customization: PricingCustomization!): PricingResult!

      # User Operations
      updateOnboardingStep(step: String!, completed: Boolean!): OnboardingProgress!
      completeOnboarding: OnboardingCompletion!

      # Analytics Operations
      generateReport(type: ReportType!, config: ReportConfig!): Report!
      exportData(format: ExportFormat!, query: String!): ExportResult!
    }

    type Subscription {
      # Real-time Analytics
      metricsUpdates: Metric!
      agentStatus: AgentStatusUpdate!
      systemHealth: SystemHealth!

      # Live Collaboration
      agentCollaborationUpdates(agentId: ID!): AgentCollaboration!
      knowledgeGraphUpdates: KnowledgeAtom!

      # Enterprise Monitoring
      enterpriseAlerts: EnterpriseAlert!
      billingUpdates: BillingUpdate!
    }

    # Core Types
    type Enterprise {
      id: ID!
      name: String!
      industry: Industry!
      employees: Int!
      subscriptionPlan: String!
      activeAgents: [AIAgent!]!
      monthlyUsage: UsageMetrics!
      complianceStatus: ComplianceStatus!
    }

    type AIAgent {
      id: ID!
      name: String!
      type: AgentType!
      capabilities: [String!]!
      status: AgentStatus!
      performance: AgentPerformance!
      collaborations: [AgentCollaboration!]!
      deploymentInfo: DeploymentInfo!
    }

    type Analytics {
      revenue: Float!
      activeUsers: Int!
      apiCalls: Int!
      systemUptime: Float!
      regionalDistribution: [RegionalMetric!]!
      trendAnalysis: TrendAnalysis!
    }

    type KnowledgeAtom {
      id: ID!
      category: String!
      content: String!
      relevanceScore: Float!
      connections: [KnowledgeAtom!]!
      lastUpdated: String!
    }

    # Enums
    enum Industry {
      FINANCE
      HEALTHCARE
      RETAIL
      MANUFACTURING
      TECHNOLOGY
      OTHER
    }

    enum AgentType {
      DATA_PROCESSING
      ANALYTICS
      CUSTOMER_SERVICE
      FINANCIAL
      HEALTHCARE
      MANUFACTURING
      CUSTOM
    }

    enum AgentStatus {
      ACTIVE
      IDLE
      BUSY
      MAINTENANCE
      OFFLINE
    }

  progressive-onboarding.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>AIA Progressive Onboarding</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
            body {
                font-family: 'SF Pro Display', sans-serif;
                margin: 0;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                height: 100vh;
                overflow: hidden;
            }
            .onboarding-container {
                position: relative;
                width: 100%;
                height: 100%;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .onboarding-content {
                max-width: 800px;
                text-align: center;
                padding: 60px;
                background: rgba(255, 255, 255, 0.1);
                border-radius: 20px;
                backdrop-filter: blur(20px);
                border: 1px solid rgba(255, 255, 255, 0.2);
                position: relative;
                z-index: 10;
            }
            .step-indicator {
                display: flex;
                justify-content: center;
                margin-bottom: 40px;
            }
            .step {
                width: 40px;
                height: 40px;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.2);
                margin: 0 10px;
                display: flex;
                align-items: center;
                justify-content: center;
                font-weight: bold;
                transition: all 0.3s;
            }
            .step.active {
                background: linear-gradient(45deg, #ff6b6b, #ff5252);
                transform: scale(1.2);
            }
            .step.completed {
                background: linear-gradient(45deg, #48bb78, #38a169);
            }
            .onboarding-title {
                font-size: 3em;
                margin-bottom: 20px;
                font-weight: 700;
            }
            .onboarding-subtitle {
                font-size: 1.3em;
                margin-bottom: 40px;
                opacity: 0.9;
                line-height: 1.5;
            }
            .feature-preview {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                gap: 20px;
                margin: 40px 0;
            }
            .feature-item {
                background: rgba(255, 255, 255, 0.1);
                padding: 30px;
                border-radius: 15px;
                transition: all 0.3s;
            }
            .feature-item:hover {
                background: rgba(255, 255, 255, 0.2);
                transform: translateY(-5px);
            }
            .feature-icon {
                font-size: 3em;
                margin-bottom: 15px;
            }
            .feature-title {
                font-size: 1.2em;
                font-weight: 600;
                margin-bottom: 10px;
            }
            .navigation-buttons {
                margin-top: 50px;
            }
            .btn {
                padding: 15px 30px;
                border: none;
                border-radius: 10px;
                font-size: 1.1em;
                font-weight: 600;
                cursor: pointer;
                margin: 0 15px;
                transition: all 0.3s;
            }
            .btn-primary {
                background: linear-gradient(45deg, #ff6b6b, #ff5252);
                color: white;
            }
            .btn-primary:hover {
                transform: translateY(-3px);
                box-shadow: 0 15px 35px rgba(255, 107, 107, 0.4);
            }
            .btn-secondary {
                background: transparent;
                color: white;
                border: 2px solid rgba(255, 255, 255, 0.5);
            }
            .btn-secondary:hover {
                background: rgba(255, 255, 255, 0.1);
            }
            .progress-bar {
                width: 100%;
                height: 8px;
                background: rgba(255, 255, 255, 0.2);
                border-radius: 4px;
                margin: 30px 0;
                overflow: hidden;
            }
            .progress-fill {
                height: 100%;
                background: linear-gradient(45deg, #ff6b6b, #ff5252);
                border-radius: 4px;
                width: 25%;
                transition: width 0.5s;
            }
        </style>
    </head>
    <body>
        <div class="onboarding-container">
            <div class="onboarding-content">
                <div class="step-indicator">
                    <div class="step active">1</div>
                    <div class="step">2</div>
                    <div class="step">3</div>
                    <div class="step">4</div>
                </div>

                <h1 class="onboarding-title">Welcome to AIA</h1>
                <p class="onboarding-subtitle">Let's get you set up with the most powerful AI platform for enterprises. This guided tour will help you discover key features and configure your workspace.</p>

                <div class="progress-bar">
                    <div class="progress-fill"></div>
                </div>

                <div class="feature-preview">
                    <div class="feature-item">
                        <div class="feature-icon">ðŸ¤–</div>
                        <div class="feature-title">AI Agents</div>
                        <p>Create intelligent agents that work autonomously</p>
                    </div>
                    <div class="feature-item">
                        <div class="feature-icon">ðŸ“Š</div>
                        <div class="feature-title">Analytics</div>
                        <p>Real-time business intelligence and insights</p>
                    </div>
                    <div class="feature-item">
                        <div class="feature-icon">ðŸ”’</div>
                        <div class="feature-title">Security</div>
                        <p>Enterprise-grade security and compliance</p>
                    </div>
                </div>

                <div class="navigation-buttons">
                    <button class="btn btn-secondary" onclick="skipTour()">Skip Tour</button>
                    <button class="btn btn-primary" onclick="nextStep()">Get Started</button>
                </div>
            </div>
        </div>

        <script>
            let currentStep = 1;
            const totalSteps = 4;

            function nextStep() {
                if (currentStep < totalSteps) {
                    currentStep++;
                    updateProgress();
                    updateContent();
                } else {
                    completeTour();
                }
            }

            function updateProgress() {
                const progress = (currentStep / totalSteps) * 100;
                document.querySelector('.progress-fill').style.width = progress + '%';

                // Update step indicators
                document.querySelectorAll('.step').forEach((step, index) => {
                    step.classList.remove('active', 'completed');
                    if (index + 1 < currentStep) {
                        step.classList.add('completed');
                    } else if (index + 1 === currentStep) {
                        step.classList.add('active');
                    }
                });
            }

            function updateContent() {
                const titles = [
                    "Welcome to AIA",
                    "Configure Your Workspace",
                    "Create Your First Agent",
                    "Explore Advanced Features"
                ];

                const subtitles = [
                    "Let's get you set up with the most powerful AI platform for enterprises.",
                    "Customize your dashboard and connect your data sources.",
                    "Build an intelligent agent tailored to your business needs.",
                    "Discover analytics, integrations, and enterprise features."
                ];

                document.querySelector('.onboarding-title').textContent = titles[currentStep - 1];
                document.querySelector('.onboarding-subtitle').textContent = subtitles[currentStep - 1];
            }

            function skipTour() {
                completeTour();
            }

            function completeTour() {
                alert('Welcome to AIA! You can always access this tour from the help menu.');
                // Redirect to main platform
                window.location.href = '/';
            }
        </script>
    </body>
    </html>

  mobile-optimization.css: |
    /* Mobile-First Responsive Design for AIA Platform */

    /* Base styles for all devices */
    * {
        box-sizing: border-box;
        -webkit-tap-highlight-color: transparent;
    }

    /* Mobile-first approach (320px and up) */
    @media screen and (max-width: 768px) {
        .hero-title {
            font-size: 2.5em !important;
            line-height: 1.2;
        }

        .hero-subtitle {
            font-size: 1.1em !important;
            padding: 0 20px;
        }

        .features-grid {
            grid-template-columns: 1fr !important;
            gap: 20px !important;
            padding: 20px !important;
        }

        .feature-card {
            padding: 30px 20px !important;
        }

        .btn {
            padding: 18px 25px !important;
            font-size: 1em !important;
            width: 100%;
            margin: 10px 0 !important;
        }

        .pricing-grid {
            grid-template-columns: 1fr !important;
            gap: 20px !important;
        }

        .metrics-grid {
            grid-template-columns: repeat(2, 1fr) !important;
            gap: 15px !important;
        }

        .metric-value {
            font-size: 2em !important;
        }

        /* Three.js Canvas Mobile Optimizations */
        .three-canvas {
            touch-action: pan-x pan-y;
            max-width: 100vw;
            max-height: 60vh;
        }

        /* Mobile navigation */
        .mobile-nav {
            display: block !important;
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0, 0, 0, 0.9);
            backdrop-filter: blur(20px);
            padding: 15px;
            z-index: 1000;
        }

        .mobile-nav-items {
            display: flex;
            justify-content: space-around;
            align-items: center;
        }

        .mobile-nav-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            color: white;
            text-decoration: none;
            font-size: 0.8em;
            padding: 10px;
            border-radius: 10px;
            transition: all 0.3s;
        }

        .mobile-nav-item:hover,
        .mobile-nav-item.active {
            background: rgba(102, 126, 234, 0.3);
        }

        .mobile-nav-icon {
            font-size: 1.5em;
            margin-bottom: 5px;
        }

        /* Hide desktop navigation on mobile */
        .desktop-nav {
            display: none !important;
        }

        /* Mobile-optimized forms */
        .form-group input,
        .form-group select,
        .form-group textarea {
            font-size: 16px !important; /* Prevents zoom on iOS */
            padding: 18px !important;
        }

        /* Touch-friendly buttons */
        .touch-target {
            min-height: 44px;
            min-width: 44px;
        }

        /* Mobile analytics charts */
        .chart-container {
            height: 250px !important;
            margin: 20px 0;
        }
    }

    /* Tablet styles (769px to 1024px) */
    @media screen and (min-width: 769px) and (max-width: 1024px) {
        .features-grid {
            grid-template-columns: repeat(2, 1fr) !important;
        }

        .pricing-grid {
            grid-template-columns: repeat(2, 1fr) !important;
        }

        .hero-title {
            font-size: 3.5em !important;
        }

        .three-canvas {
            max-height: 70vh;
        }
    }

    /* Desktop styles (1025px and up) */
    @media screen and (min-width: 1025px) {
        .mobile-nav {
            display: none !important;
        }

        .desktop-nav {
            display: flex !important;
        }

        /* Desktop-optimized Three.js */
        .three-canvas {
            max-height: 100vh;
        }

        /* Hover effects for desktop */
        .feature-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        }
    }

    /* High-DPI display optimizations */
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .three-canvas {
            image-rendering: -webkit-optimize-contrast;
        }
    }

    /* Dark mode support */
    @media (prefers-color-scheme: dark) {
        .mobile-nav {
            background: rgba(0, 0, 0, 0.95);
        }

        .form-group input,
        .form-group select {
            background: rgba(255, 255, 255, 0.1);
            color: white;
        }
    }

    /* Reduced motion support */
    @media (prefers-reduced-motion: reduce) {
        *,
        *::before,
        *::after {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
            scroll-behavior: auto !important;
        }

        .three-canvas {
            animation: none !important;
        }
    }

    /* iOS-specific optimizations */
    @supports (-webkit-appearance: none) {
        .ios-safe-area {
            padding-bottom: env(safe-area-inset-bottom);
            padding-top: env(safe-area-inset-top);
        }

        .mobile-nav {
            padding-bottom: calc(15px + env(safe-area-inset-bottom));
        }
    }
---
# GraphQL API Service
apiVersion: v1
kind: Service
metadata:
  name: aia-graphql-service
  namespace: aia-comprehensive-platform
spec:
  selector:
    app: aia-graphql
  ports:
  - port: 4000
    targetPort: 4000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-graphql-deployment
  namespace: aia-comprehensive-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aia-graphql
  template:
    metadata:
      labels:
        app: aia-graphql
    spec:
      containers:
      - name: graphql
        image: node:18-alpine
        ports:
        - containerPort: 4000
        command:
        - /bin/sh
        - -c
        - |
          npm init -y
          npm install apollo-server-express graphql express
          cat > server.js << 'EOF'
          const { ApolloServer, gql } = require('apollo-server-express');
          const express = require('express');

          const typeDefs = gql`
            type Query {
              enterprises: [Enterprise!]!
              analytics: Analytics!
              agents: [AIAgent!]!
            }

            type Enterprise {
              id: ID!
              name: String!
              industry: String!
              activeAgents: Int!
            }

            type Analytics {
              revenue: Float!
              activeUsers: Int!
              apiCalls: Int!
              systemUptime: Float!
            }

            type AIAgent {
              id: ID!
              name: String!
              status: String!
              capabilities: [String!]!
            }
          `;

          const resolvers = {
            Query: {
              enterprises: () => [
                { id: '1', name: 'Acme Corp', industry: 'Technology', activeAgents: 25 },
                { id: '2', name: 'Global Finance', industry: 'Finance', activeAgents: 45 }
              ],
              analytics: () => ({
                revenue: 2400000,
                activeUsers: 15420,
                apiCalls: 2847593,
                systemUptime: 99.97
              }),
              agents: () => [
                { id: '1', name: 'Analytics Agent', status: 'ACTIVE', capabilities: ['data-analysis', 'reporting'] },
                { id: '2', name: 'Finance Agent', status: 'ACTIVE', capabilities: ['risk-assessment', 'trading'] }
              ]
            }
          };

          async function startServer() {
            const app = express();
            const server = new ApolloServer({ typeDefs, resolvers });
            await server.start();
            server.applyMiddleware({ app });

            app.listen(4000, () => {
              console.log('AIA GraphQL API running on port 4000');
              console.log('GraphQL Playground: http://localhost:4000/graphql');
            });
          }

          startServer();
          EOF
          node server.js
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
---
# Onboarding Service
apiVersion: v1
kind: Service
metadata:
  name: aia-onboarding-service
  namespace: aia-comprehensive-platform
spec:
  selector:
    app: aia-onboarding
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-onboarding-deployment
  namespace: aia-comprehensive-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aia-onboarding
  template:
    metadata:
      labels:
        app: aia-onboarding
    spec:
      containers:
      - name: onboarding
        image: nginx:alpine
        ports:
        - containerPort: 80
        command:
        - /bin/sh
        - -c
        - |
          cp /advanced-features/progressive-onboarding.html /usr/share/nginx/html/index.html
          cp /advanced-features/mobile-optimization.css /usr/share/nginx/html/mobile.css
          nginx -g 'daemon off;'
        volumeMounts:
        - name: advanced-features
          mountPath: /advanced-features
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
      volumes:
      - name: advanced-features
        configMap:
          name: aia-advanced-features