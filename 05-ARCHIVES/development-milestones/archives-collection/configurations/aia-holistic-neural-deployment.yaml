---
# AIA HOLISTIC NEURAL DEPLOYMENT
# Complete production deployment with full complexity
# Neural Intelligence Layer + Sentient API + Multi-Agent Orchestration
# Enterprise Features + 3D Analytics + Security + Monitoring
apiVersion: v1
kind: Namespace
metadata:
  name: aia-neural-production
  labels:
    environment: production
    complexity: full
    tier: neural-intelligence
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aia-neural-config
  namespace: aia-neural-production
data:
  # Neural Intelligence Configuration
  NEURAL_ORCHESTRATION_ENABLED: "true"
  U_DKG_COORDINATION: "true"
  COGNITIVE_ADAPTATION: "true"
  ECONOMIC_OPTIMIZATION: "true"

  # Database Configuration
  DATABASE_URL: "postgresql://aia_user:aia_pass@postgres-neural:5432/aia_neural_db"
  REDIS_URL: "redis://redis-neural:6379/0"

  # API Configuration
  API_VERSION: "v2.5"
  ENVIRONMENT: "production"
  CORS_ORIGINS: "*"

  # Feature Flags - Full Complexity Enabled
  ENABLE_3D_ANALYTICS: "true"
  ENABLE_ENTERPRISE_FEATURES: "true"
  ENABLE_FORTUNE_500_INTEGRATIONS: "true"
  ENABLE_QUANTUM_SECURITY: "true"
  ENABLE_REAL_TIME_COLLABORATION: "true"
  ENABLE_IMMERSIVE_VISUALIZATION: "true"

  # Performance Configuration
  MAX_WORKERS: "16"
  MEMORY_OPTIMIZATION: "true"
  GPU_ACCELERATION: "true"

  # Monitoring Configuration
  METRICS_ENABLED: "true"
  PROMETHEUS_PORT: "9090"
  GRAFANA_ENABLED: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: aia-neural-secrets
  namespace: aia-neural-production
type: Opaque
stringData:
  # Database credentials
  POSTGRES_PASSWORD: "aia_neural_secure_2025"
  POSTGRES_USER: "aia_user"
  POSTGRES_DB: "aia_neural_db"

  # Redis credentials
  REDIS_PASSWORD: "aia_redis_secure_2025"

  # API Keys and tokens (placeholder - replace with actual values)
  OPENAI_API_KEY: "placeholder"
  HF_TOKEN: "placeholder"
  XAI_API_KEY: "placeholder"

  # Stripe Payment Configuration
  STRIPE_SECRET_KEY: "placeholder"
  STRIPE_WEBHOOK_SECRET: "placeholder"

  # JWT Secret
  JWT_SECRET_KEY: "aia_jwt_neural_secret_2025_ultra_secure"
---
# PostgreSQL Database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-neural
  namespace: aia-neural-production
  labels:
    app: postgres-neural
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-neural
  template:
    metadata:
      labels:
        app: postgres-neural
        tier: database
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: aia-neural-secrets
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: aia-neural-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: aia-neural-secrets
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-neural-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-neural-pvc
  namespace: aia-neural-production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-neural
  namespace: aia-neural-production
spec:
  selector:
    app: postgres-neural
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
# Redis Cache
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-neural
  namespace: aia-neural-production
  labels:
    app: redis-neural
    tier: cache
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis-neural
  template:
    metadata:
      labels:
        app: redis-neural
        tier: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command: ["redis-server"]
        args: ["--requirepass", "$(REDIS_PASSWORD)", "--maxmemory", "1gb", "--maxmemory-policy", "allkeys-lru"]
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: aia-neural-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-neural
  namespace: aia-neural-production
spec:
  selector:
    app: redis-neural
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP
---
# AIA Neural Backend - Main Sentient API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-neural-backend
  namespace: aia-neural-production
  labels:
    app: aia-neural-backend
    tier: api
    component: neural-intelligence
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aia-neural-backend
  template:
    metadata:
      labels:
        app: aia-neural-backend
        tier: api
        component: neural-intelligence
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: aia-backend
        image: gcr.io/aia-system-prod-1759055445/aia-global-backend:latest
        ports:
        - containerPort: 8000
          name: http
        envFrom:
        - configMapRef:
            name: aia-neural-config
        - secretRef:
            name: aia-neural-secrets
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: temp-storage
          mountPath: /app/temp
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: temp-storage
        emptyDir:
          sizeLimit: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: aia-neural-backend
  namespace: aia-neural-production
  labels:
    app: aia-neural-backend
    tier: api
spec:
  selector:
    app: aia-neural-backend
  ports:
  - port: 80
    targetPort: 8000
    name: http
  type: ClusterIP
---
# AIA Neural Frontend - 3D Analytics & Immersive Visualization
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-neural-frontend
  namespace: aia-neural-production
  labels:
    app: aia-neural-frontend
    tier: frontend
    component: immersive-3d
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aia-neural-frontend
  template:
    metadata:
      labels:
        app: aia-neural-frontend
        tier: frontend
        component: immersive-3d
    spec:
      containers:
      - name: aia-frontend
        image: gcr.io/aia-system-prod-1759055445/aia-global-frontend:latest
        ports:
        - containerPort: 80
          name: http
        envFrom:
        - configMapRef:
            name: aia-neural-config
        env:
        - name: REACT_APP_API_URL
          value: "https://013a.tech/api"
        - name: REACT_APP_WS_URL
          value: "wss://013a.tech/ws"
        - name: REACT_APP_ENVIRONMENT
          value: "production"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: aia-neural-frontend
  namespace: aia-neural-production
  labels:
    app: aia-neural-frontend
    tier: frontend
spec:
  selector:
    app: aia-neural-frontend
  ports:
  - port: 80
    targetPort: 80
    name: http
  type: ClusterIP
---
# Multi-Agent Orchestration System
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-neural-orchestrator
  namespace: aia-neural-production
  labels:
    app: aia-neural-orchestrator
    tier: orchestration
    component: multi-agent
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aia-neural-orchestrator
  template:
    metadata:
      labels:
        app: aia-neural-orchestrator
        tier: orchestration
        component: multi-agent
    spec:
      containers:
      - name: orchestrator
        image: gcr.io/aia-system-prod-1759055445/aia-cognitive-processor:latest
        ports:
        - containerPort: 8001
          name: http
        envFrom:
        - configMapRef:
            name: aia-neural-config
        - secretRef:
            name: aia-neural-secrets
        env:
        - name: ORCHESTRATOR_MODE
          value: "neural-coordination"
        - name: U_DKG_ENABLED
          value: "true"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: aia-neural-orchestrator
  namespace: aia-neural-production
spec:
  selector:
    app: aia-neural-orchestrator
  ports:
  - port: 8001
    targetPort: 8001
    name: http
  type: ClusterIP
---
# Enterprise Partner Services
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-neural-enterprise
  namespace: aia-neural-production
  labels:
    app: aia-neural-enterprise
    tier: enterprise
    component: fortune-500
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aia-neural-enterprise
  template:
    metadata:
      labels:
        app: aia-neural-enterprise
        tier: enterprise
        component: fortune-500
    spec:
      containers:
      - name: enterprise-api
        image: gcr.io/aia-system-prod-1759055445/aia-api:latest
        ports:
        - containerPort: 8002
          name: http
        envFrom:
        - configMapRef:
            name: aia-neural-config
        - secretRef:
            name: aia-neural-secrets
        env:
        - name: ENTERPRISE_MODE
          value: "fortune-500"
        - name: COMPLIANCE_LEVEL
          value: "enterprise"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: aia-neural-enterprise
  namespace: aia-neural-production
spec:
  selector:
    app: aia-neural-enterprise
  ports:
  - port: 8002
    targetPort: 8002
    name: http
  type: ClusterIP
---
# Payment Processing Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-neural-payment
  namespace: aia-neural-production
  labels:
    app: aia-neural-payment
    tier: payment
    component: stripe-eu
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aia-neural-payment
  template:
    metadata:
      labels:
        app: aia-neural-payment
        tier: payment
        component: stripe-eu
    spec:
      containers:
      - name: payment-processor
        image: gcr.io/aia-system-prod-1759055445/aia-biometric-processor:latest
        ports:
        - containerPort: 8003
          name: http
        envFrom:
        - configMapRef:
            name: aia-neural-config
        - secretRef:
            name: aia-neural-secrets
        env:
        - name: PAYMENT_PROCESSOR
          value: "stripe"
        - name: COMPLIANCE_MODE
          value: "eu-gdpr"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: aia-neural-payment
  namespace: aia-neural-production
spec:
  selector:
    app: aia-neural-payment
  ports:
  - port: 8003
    targetPort: 8003
    name: http
  type: ClusterIP
---
# WebSocket Service for Real-time Collaboration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-neural-websocket
  namespace: aia-neural-production
  labels:
    app: aia-neural-websocket
    tier: websocket
    component: real-time
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aia-neural-websocket
  template:
    metadata:
      labels:
        app: aia-neural-websocket
        tier: websocket
        component: real-time
    spec:
      containers:
      - name: websocket-server
        image: gcr.io/aia-system-prod-1759055445/aia-websocket-server:latest
        ports:
        - containerPort: 8004
          name: http
        envFrom:
        - configMapRef:
            name: aia-neural-config
        - secretRef:
            name: aia-neural-secrets
        env:
        - name: WEBSOCKET_MODE
          value: "neural-collaboration"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: aia-neural-websocket
  namespace: aia-neural-production
spec:
  selector:
    app: aia-neural-websocket
  ports:
  - port: 8004
    targetPort: 8004
    name: http
  type: ClusterIP
---
# ML Processing Engine
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-neural-ml-engine
  namespace: aia-neural-production
  labels:
    app: aia-neural-ml-engine
    tier: ml
    component: ai-processing
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aia-neural-ml-engine
  template:
    metadata:
      labels:
        app: aia-neural-ml-engine
        tier: ml
        component: ai-processing
    spec:
      containers:
      - name: ml-processor
        image: gcr.io/aia-system-prod-1759055445/aia-ml-processor:latest
        ports:
        - containerPort: 8005
          name: http
        envFrom:
        - configMapRef:
            name: aia-neural-config
        - secretRef:
            name: aia-neural-secrets
        env:
        - name: ML_MODE
          value: "neural-processing"
        - name: GPU_ENABLED
          value: "true"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: aia-neural-ml-engine
  namespace: aia-neural-production
spec:
  selector:
    app: aia-neural-ml-engine
  ports:
  - port: 8005
    targetPort: 8005
    name: http
  type: ClusterIP
---
# Main Ingress with SSL
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aia-neural-ingress
  namespace: aia-neural-production
  annotations:
    kubernetes.io/ingress.global-static-ip-name: aia-neural-global-ip
    kubernetes.io/ingress.class: gce
    ingress.gcp.io/load-balancer-type: "External"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
spec:
  tls:
  - hosts:
    - "013a.tech"
    - "www.013a.tech"
    - "api.013a.tech"
    secretName: aia-neural-tls
  rules:
  - host: "013a.tech"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-neural-frontend
            port:
              number: 80
  - host: "www.013a.tech"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-neural-frontend
            port:
              number: 80
  - host: "api.013a.tech"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-neural-backend
            port:
              number: 80
      - path: /orchestrator
        pathType: Prefix
        backend:
          service:
            name: aia-neural-orchestrator
            port:
              number: 8001
      - path: /enterprise
        pathType: Prefix
        backend:
          service:
            name: aia-neural-enterprise
            port:
              number: 8002
      - path: /payments
        pathType: Prefix
        backend:
          service:
            name: aia-neural-payment
            port:
              number: 8003
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: aia-neural-websocket
            port:
              number: 8004
      - path: /ml
        pathType: Prefix
        backend:
          service:
            name: aia-neural-ml-engine
            port:
              number: 8005
---
# Horizontal Pod Autoscaler for Backend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: aia-neural-backend-hpa
  namespace: aia-neural-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aia-neural-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: aia-neural-network-policy
  namespace: aia-neural-production
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: aia-neural-production
    - namespaceSelector:
        matchLabels:
          name: kube-system
  egress:
  - to: []