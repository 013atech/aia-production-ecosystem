# TEMPORARILY DISABLED FOR QUOTA COMPLIANCE
# This deployment has been temporarily disabled to meet GCP quota requirements
# Original content below (commented out):
#
# # IMMERSIVE 3D PERFORMANCE MONITORING DASHBOARD
# # Real-time monitoring for 60fps performance target and WebXR metrics
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: monitoring-config
#   namespace: immersive-analytics
# data:
#   prometheus.yml: |
#     global:
#       scrape_interval: 15s
#       evaluation_interval: 15s
# 
#     rule_files:
#       - "immersive_rules.yml"
# 
#     scrape_configs:
#       - job_name: 'immersive-frontend'
#         static_configs:
#           - targets: ['immersive-frontend-service:80']
#         metrics_path: '/metrics'
#         scrape_interval: 5s
# 
#       - job_name: 'kubernetes-pods'
#         kubernetes_sd_configs:
#         - role: pod
#           namespaces:
#             names:
#             - immersive-analytics
#         relabel_configs:
#         - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
#           action: keep
#           regex: true
#         - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
#           action: replace
#           target_label: __metrics_path__
#           regex: (.+)
# 
#   immersive_rules.yml: |
#     groups:
#     - name: immersive_performance
#       rules:
#       - alert: Low3DPerformance
#         expr: rate(http_request_duration_seconds_sum[5m]) / rate(http_request_duration_seconds_count[5m]) > 0.1
#         for: 2m
#         labels:
#           severity: warning
#         annotations:
#           summary: "3D performance degradation detected"
#           description: "Average response time is {{ $value }}s which may affect 60fps target"
# 
#       - alert: HighMemoryUsage
#         expr: (container_memory_usage_bytes{container="immersive-react-app"} / container_spec_memory_limit_bytes) > 0.85
#         for: 5m
#         labels:
#           severity: critical
#         annotations:
#           summary: "High memory usage in immersive container"
# 
#       - alert: WebXRConnectionFailures
#         expr: increase(webxr_connection_failures_total[5m]) > 5
#         for: 1m
#         labels:
#           severity: warning
#         annotations:
#           summary: "WebXR connection failures detected"
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: prometheus
#   namespace: immersive-analytics
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: prometheus
#   template:
#     metadata:
#       labels:
#         app: prometheus
#     spec:
#       containers:
#       - name: prometheus
#         image: prom/prometheus:v2.40.0
#         args:
#         - '--config.file=/etc/prometheus/prometheus.yml'
#         - '--storage.tsdb.path=/prometheus/'
#         - '--web.console.libraries=/etc/prometheus/console_libraries'
#         - '--web.console.templates=/etc/prometheus/consoles'
#         - '--storage.tsdb.retention.time=200h'
#         - '--web.enable-lifecycle'
#         ports:
#         - containerPort: 9090
#         volumeMounts:
#         - name: prometheus-config
#           mountPath: /etc/prometheus/
#         - name: prometheus-storage
#           mountPath: /prometheus/
#         resources:
#           requests:
#             memory: "128Mi"
#             cpu: "100m"
#           limits:
#             memory: "128Mi"
#             cpu: "100m"
#       volumes:
#       - name: prometheus-config
#         configMap:
#           name: monitoring-config
#       - name: prometheus-storage
#         emptyDir: {}
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: prometheus-service
#   namespace: immersive-analytics
# spec:
#   selector:
#     app: prometheus
#   ports:
#   - port: 9090
#     targetPort: 9090
#   type: ClusterIP
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: grafana
#   namespace: immersive-analytics
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: grafana
#   template:
#     metadata:
#       labels:
#         app: grafana
#     spec:
#       containers:
#       - name: grafana
#         image: grafana/grafana:9.3.0
#         env:
#         - name: GF_SECURITY_ADMIN_PASSWORD
#           value: "admin"
#         - name: GF_SERVER_ROOT_URL
#           value: "https://monitoring.013a.tech"
#         ports:
#         - containerPort: 3000
#         volumeMounts:
#         - name: grafana-storage
#           mountPath: /var/lib/grafana
#         - name: grafana-config
#           mountPath: /etc/grafana/provisioning
#         resources:
#           requests:
#             memory: "128Mi"
#             cpu: "100m"
#           limits:
#             memory: "128Mi"
#             cpu: "100m"
#       volumes:
#       - name: grafana-storage
#         emptyDir: {}
#       - name: grafana-config
#         configMap:
#           name: grafana-config
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: grafana-config
#   namespace: immersive-analytics
# data:
#   datasources.yml: |
#     apiVersion: 1
#     datasources:
#     - name: Prometheus
#       type: prometheus
#       url: http://prometheus-service:9090
#       isDefault: true
#       editable: true
# 
#   dashboards.yml: |
#     apiVersion: 1
#     providers:
#     - name: 'default'
#       orgId: 1
#       folder: ''
#       type: file
#       disableDeletion: false
#       editable: true
#       options:
#         path: /var/lib/grafana/dashboards
# 
#   immersive-dashboard.json: |
#     {
#       "dashboard": {
#         "id": null,
#         "title": "013a Immersive Analytics Performance",
#         "tags": ["immersive", "3d", "webxr", "performance"],
#         "timezone": "browser",
#         "panels": [
#           {
#             "id": 1,
#             "title": "3D Rendering Performance",
#             "type": "graph",
#             "targets": [
#               {
#                 "expr": "rate(http_requests_total[5m])",
#                 "legendFormat": "Requests/sec"
#               }
#             ],
#             "yAxes": [
#               {
#                 "label": "Requests per second",
#                 "min": 0
#               }
#             ],
#             "xAxis": {
#               "show": true
#             },
#             "gridPos": {
#               "h": 8,
#               "w": 12,
#               "x": 0,
#               "y": 0
#             }
#           },
#           {
#             "id": 2,
#             "title": "Memory Usage",
#             "type": "graph",
#             "targets": [
#               {
#                 "expr": "container_memory_usage_bytes{container=\"immersive-react-app\"}",
#                 "legendFormat": "Memory Usage"
#               }
#             ],
#             "yAxes": [
#               {
#                 "label": "Bytes",
#                 "min": 0
#               }
#             ],
#             "gridPos": {
#               "h": 8,
#               "w": 12,
#               "x": 12,
#               "y": 0
#             }
#           },
#           {
#             "id": 3,
#             "title": "WebXR Session Count",
#             "type": "singlestat",
#             "targets": [
#               {
#                 "expr": "webxr_active_sessions",
#                 "legendFormat": "Active Sessions"
#               }
#             ],
#             "valueMaps": [
#               {
#                 "value": "null",
#                 "text": "0"
#               }
#             ],
#             "gridPos": {
#               "h": 4,
#               "w": 6,
#               "x": 0,
#               "y": 8
#             }
#           },
#           {
#             "id": 4,
#             "title": "Knowledge Atoms Rendered",
#             "type": "singlestat",
#             "targets": [
#               {
#                 "expr": "knowledge_atoms_total",
#                 "legendFormat": "Total Atoms"
#               }
#             ],
#             "gridPos": {
#               "h": 4,
#               "w": 6,
#               "x": 6,
#               "y": 8
#             }
#           },
#           {
#             "id": 5,
#             "title": "Response Time Distribution",
#             "type": "heatmap",
#             "targets": [
#               {
#                 "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))",
#                 "legendFormat": "95th percentile"
#               }
#             ],
#             "gridPos": {
#               "h": 8,
#               "w": 12,
#               "x": 12,
#               "y": 8
#             }
#           }
#         ],
#         "time": {
#           "from": "now-1h",
#           "to": "now"
#         },
#         "refresh": "5s"
#       }
#     }
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: grafana-service
#   namespace: immersive-analytics
# spec:
#   selector:
#     app: grafana
#   ports:
#   - port: 3000
#     targetPort: 3000
#   type: ClusterIP
# ---
# # Performance Testing Job
# apiVersion: batch/v1
# kind: CronJob
# metadata:
#   name: performance-test
#   namespace: immersive-analytics
# spec:
#   schedule: "*/5 * * * *"  # Every 5 minutes
#   jobTemplate:
#     spec:
#       template:
#         spec:
#           containers:
#           - name: performance-test
#             image: curlimages/curl:latest
#             command: ["/bin/sh"]
#             args:
#             - -c
#             - |
#               echo "Testing immersive.013a.tech performance..."
# 
#               # Test response time
#               RESPONSE_TIME=$(curl -w "%{time_total}" -s -o /dev/null https://immersive.013a.tech)
#               echo "Response time: ${RESPONSE_TIME}s"
# 
#               # Test 3D assets
#               curl -s https://immersive.013a.tech/static/js/main.*.js > /dev/null
#               echo "3D assets loaded successfully"
# 
#               # Test health endpoint
#               curl -s https://immersive.013a.tech/health
# 
#               if [ $(echo "$RESPONSE_TIME < 2.0" | bc -l) -eq 1 ]; then
#                 echo "✅ Performance target met"
#               else
#                 echo "⚠️ Performance target missed: ${RESPONSE_TIME}s"
#               fi
#           restartPolicy: OnFailure
# ---
# # Network Policy for Security
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: immersive-network-policy
#   namespace: immersive-analytics
# spec:
#   podSelector:
#     matchLabels:
#       app: immersive-frontend
#   policyTypes:
#   - Ingress
#   - Egress
#   ingress:
#   - from:
#     - namespaceSelector:
#         matchLabels:
#           name: ingress-nginx
#     - namespaceSelector:
#         matchLabels:
#           name: kube-system
#     ports:
#     - protocol: TCP
#       port: 3000
#   egress:
#   - to:
#     - namespaceSelector:
#         matchLabels:
#           name: aia-working-production
#     ports:
#     - protocol: TCP
#       port: 80
#   - to: []
#     ports:
#     - protocol: TCP
#       port: 443
#     - protocol: TCP
#       port: 53
#     - protocol: UDP
#       port: 53
