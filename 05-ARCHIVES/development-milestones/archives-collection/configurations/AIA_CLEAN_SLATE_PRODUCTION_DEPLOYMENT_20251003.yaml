# ðŸ”’ AIA CLEAN SLATE PRODUCTION DEPLOYMENT
# Generated by: Cryptography Agent-Led Multi-Agent Team
# Date: October 3, 2025
# Target: 013a.tech production deployment
# Backend Coordination: localhost:8000

apiVersion: v1
kind: Namespace
metadata:
  name: aia-production-clean-slate
  labels:
    app: aia-analytics
    environment: production
    managed-by: cryptography-agent
    deployment-type: clean-slate
---
# External Secrets Operator for secure secret management
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: gcpsm-secret-store
  namespace: aia-production-clean-slate
spec:
  provider:
    gcpsm:
      projectId: "aia-system-prod-1759055445"
      auth:
        workloadIdentity:
          clusterLocation: europe-west4
          clusterName: aia-production-optimal
          serviceAccountRef:
            name: aia-external-secrets-sa
---
# API Keys and JWT Secrets
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: aia-api-secrets
  namespace: aia-production-clean-slate
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: gcpsm-secret-store
    kind: SecretStore
  target:
    name: aia-api-secrets
    creationPolicy: Owner
  data:
  - secretKey: jwt-secret
    remoteRef:
      key: aia-jwt-secret
  - secretKey: api-key
    remoteRef:
      key: aia-api-key
  - secretKey: stripe-secret-key
    remoteRef:
      key: stripe-secret-key
  - secretKey: postgres-password
    remoteRef:
      key: aia-postgres-password
---
# Enhanced PostgreSQL Database with Production Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-postgres-enhanced
  namespace: aia-production-clean-slate
  labels:
    app: aia-postgres
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aia-postgres
  template:
    metadata:
      labels:
        app: aia-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "aia_production"
        - name: POSTGRES_USER
          value: "aia_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: aia-api-secrets
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "1"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - aia_user
            - -d
            - aia_production
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - aia_user
            - -d
            - aia_production
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: aia-postgres-pvc
---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: aia-postgres-service
  namespace: aia-production-clean-slate
spec:
  selector:
    app: aia-postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
# PostgreSQL PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aia-postgres-pvc
  namespace: aia-production-clean-slate
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: standard-rwo
---
# Redis with Enhanced Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-redis-enhanced
  namespace: aia-production-clean-slate
  labels:
    app: aia-redis
    tier: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aia-redis
  template:
    metadata:
      labels:
        app: aia-redis
    spec:
      containers:
      - name: redis
        image: redis:7.2-alpine
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --maxmemory
        - "1gb"
        - --maxmemory-policy
        - "allkeys-lru"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: aia-redis-pvc
---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: aia-redis-service
  namespace: aia-production-clean-slate
spec:
  selector:
    app: aia-redis
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP
---
# Redis PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aia-redis-pvc
  namespace: aia-production-clean-slate
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard-rwo
---
# Enhanced AIA Backend with Production Features
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-backend-enhanced
  namespace: aia-production-clean-slate
  labels:
    app: aia-backend
    tier: application
    version: enhanced
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aia-backend
  template:
    metadata:
      labels:
        app: aia-backend
        version: enhanced
    spec:
      serviceAccountName: aia-workload-identity-sa
      containers:
      - name: aia-backend
        image: gcr.io/aia-system-prod-1759055445/aia-backend:enhanced-latest
        ports:
        - containerPort: 8000
        env:
        - name: GOOGLE_CLOUD_PROJECT
          value: "aia-system-prod-1759055445"
        - name: REDIS_HOST
          value: "aia-redis-service"
        - name: POSTGRES_HOST
          value: "aia-postgres-service"
        - name: POSTGRES_DB
          value: "aia_production"
        - name: POSTGRES_USER
          value: "aia_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: aia-api-secrets
              key: postgres-password
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: aia-api-secrets
              key: jwt-secret
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: aia-api-secrets
              key: stripe-secret-key
        - name: AIA_VERTEX_AI_ENABLED
          value: "true"
        - name: AIA_KNOWLEDGE_GRAPH_PATH
          value: "/app/aia_knowledge_graph_v2_1759313796.json"
        - name: LOG_LEVEL
          value: "info"
        - name: ENVIRONMENT
          value: "production"
        resources:
          requests:
            memory: "128Mi"
            cpu: "1"
          limits:
            memory: "128Mi"
            cpu: "2"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        volumeMounts:
        - name: knowledge-graph-volume
          mountPath: /app/aia_knowledge_graph_v2_1759313796.json
          subPath: aia_knowledge_graph_v2_1759313796.json
          readOnly: true
      volumes:
      - name: knowledge-graph-volume
        configMap:
          name: aia-knowledge-graph-configmap
---
# Enhanced AIA Backend Service
apiVersion: v1
kind: Service
metadata:
  name: aia-backend-enhanced-service
  namespace: aia-production-clean-slate
  labels:
    app: aia-backend
spec:
  selector:
    app: aia-backend
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
# AIA Frontend with 3D Analytics
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-frontend-3d
  namespace: aia-production-clean-slate
  labels:
    app: aia-frontend
    tier: presentation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aia-frontend
  template:
    metadata:
      labels:
        app: aia-frontend
    spec:
      containers:
      - name: aia-frontend
        image: gcr.io/aia-system-prod-1759055445/aia-frontend:3d-enhanced-latest
        ports:
        - containerPort: 80
        env:
        - name: REACT_APP_API_URL
          value: "https://013a.tech/api"
        - name: REACT_APP_ENVIRONMENT
          value: "production"
        - name: REACT_APP_ENABLE_3D
          value: "true"
        - name: REACT_APP_WEBXR_ENABLED
          value: "true"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 15
---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: aia-frontend-service
  namespace: aia-production-clean-slate
  labels:
    app: aia-frontend
spec:
  selector:
    app: aia-frontend
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
# Global HTTPS Load Balancer with SSL
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: aia-ssl-certificate
  namespace: aia-production-clean-slate
spec:
  domains:
  - 013a.tech
  - www.013a.tech
  - api.013a.tech
---
# Production Ingress with Enhanced Configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aia-production-ingress
  namespace: aia-production-clean-slate
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "aia-production-ip"
    networking.gke.io/managed-certificates: "aia-ssl-certificate"
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.allow-http: "false"
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "aia-backend-config"}'
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
  - host: 013a.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-frontend-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: aia-backend-enhanced-service
            port:
              number: 80
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: aia-backend-enhanced-service
            port:
              number: 80
      - path: /monitoring
        pathType: Prefix
        backend:
          service:
            name: aia-backend-enhanced-service
            port:
              number: 80
      - path: /knowledge-graph
        pathType: Prefix
        backend:
          service:
            name: aia-backend-enhanced-service
            port:
              number: 80
  - host: www.013a.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-frontend-service
            port:
              number: 80
  - host: api.013a.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-backend-enhanced-service
            port:
              number: 80
---
# Backend Configuration for Load Balancer
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: aia-backend-config
  namespace: aia-production-clean-slate
spec:
  timeoutSec: 30
  connectionDraining:
    drainingTimeoutSec: 60
  sessionAffinity:
    affinityType: "CLIENT_IP"
  healthCheck:
    checkIntervalSec: 10
    timeoutSec: 5
    healthyThreshold: 1
    unhealthyThreshold: 3
    type: HTTP
    requestPath: /health
    port: 8000
---
# Workload Identity Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aia-workload-identity-sa
  namespace: aia-production-clean-slate
  annotations:
    iam.gke.io/gcp-service-account: aia-production@aia-system-prod-1759055445.iam.gserviceaccount.com
---
# External Secrets Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aia-external-secrets-sa
  namespace: aia-production-clean-slate
  annotations:
    iam.gke.io/gcp-service-account: external-secrets@aia-system-prod-1759055445.iam.gserviceaccount.com
---
# Horizontal Pod Autoscaler for Backend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: aia-backend-hpa
  namespace: aia-production-clean-slate
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aia-backend-enhanced
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
---
# Frontend HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: aia-frontend-hpa
  namespace: aia-production-clean-slate
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aia-frontend-3d
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
---
# Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: aia-network-policy
  namespace: aia-production-clean-slate
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: aia-production-clean-slate
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
    - protocol: UDP
      port: 53
---
# Pod Disruption Budget for Backend
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: aia-backend-pdb
  namespace: aia-production-clean-slate
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: aia-backend
---
# Pod Disruption Budget for Frontend
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: aia-frontend-pdb
  namespace: aia-production-clean-slate
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: aia-frontend
---
# ConfigMap for Knowledge Graph
apiVersion: v1
kind: ConfigMap
metadata:
  name: aia-knowledge-graph-configmap
  namespace: aia-production-clean-slate
data:
  knowledge_graph_info.txt: |
    AIA Knowledge Graph v2
    Generated: 2025-10-01T12:16:36.371202
    Total Atoms: 2,472
    Processing Time: 16.38 seconds
    Data Processed: 253.1MB

    This knowledge graph contains comprehensive AIA system knowledge
    with semantic relationships and technical context mapping.

    Loaded by Enhanced Knowledge Graph Service for production use.