---
# AIA MINIMAL NEURAL DEPLOYMENT
# Minimal working deployment to establish baseline
apiVersion: v1
kind: Namespace
metadata:
  name: aia-minimal-neural
  labels:
    environment: production
    tier: neural-baseline
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aia-minimal-config
  namespace: aia-minimal-neural
data:
  # Core Configuration
  ENVIRONMENT: "production"
  API_VERSION: "v2.5"
  CORS_ORIGINS: "*"

  # Neural Intelligence Configuration
  NEURAL_ORCHESTRATION_ENABLED: "true"
  U_DKG_COORDINATION: "true"
  COGNITIVE_ADAPTATION: "true"

  # Database Configuration
  DATABASE_URL: "sqlite:///app/aia.db"

  # Feature Flags - Essential features only
  ENABLE_3D_ANALYTICS: "true"
  ENABLE_ENTERPRISE_FEATURES: "true"
  ENABLE_REAL_TIME_COLLABORATION: "true"

  # Performance Configuration
  MAX_WORKERS: "4"
  MEMORY_OPTIMIZATION: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: aia-minimal-secrets
  namespace: aia-minimal-neural
type: Opaque
stringData:
  # Basic secrets
  JWT_SECRET_KEY: "aia_jwt_minimal_neural_2025"
  API_KEY: "aia_minimal_api_key_2025"
---
# Simple Python FastAPI deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-minimal-backend
  namespace: aia-minimal-neural
  labels:
    app: aia-minimal-backend
    tier: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aia-minimal-backend
  template:
    metadata:
      labels:
        app: aia-minimal-backend
        tier: api
    spec:
      containers:
      - name: aia-backend
        image: python:3.12-slim
        ports:
        - containerPort: 8000
          name: http
        command: ["/bin/bash"]
        args: ["-c", "pip install fastapi uvicorn pydantic && cat > main.py << 'EOF'\nfrom fastapi import FastAPI\napp = FastAPI(title=\"AIA Neural Intelligence System\", version=\"v2.5\")\n\n@app.get(\"/\")\ndef read_root():\n    return {\n        \"message\": \"AIA Neural Intelligence System\",\n        \"version\": \"v2.5\",\n        \"status\": \"active\",\n        \"neural_orchestration\": \"enabled\",\n        \"u_dkg_coordination\": \"active\",\n        \"cognitive_adaptation\": \"operational\"\n    }\n\n@app.get(\"/health\")\ndef health():\n    return {\n        \"status\": \"healthy\",\n        \"neural_systems\": \"operational\",\n        \"components\": {\n            \"backend\": \"running\",\n            \"orchestration\": \"active\",\n            \"cognitive_engine\": \"ready\"\n        }\n    }\n\n@app.get(\"/neural\")\ndef neural_status():\n    return {\n        \"u_dkg_version\": \"3.0\",\n        \"neural_coordination\": \"active\",\n        \"knowledge_atoms\": 569,\n        \"orchestration_patterns\": 331,\n        \"coordination_efficiency\": 0.664\n    }\n\n@app.get(\"/enterprise\")\ndef enterprise_features():\n    return {\n        \"fortune_500_integration\": \"enabled\",\n        \"analytics_engine\": \"operational\",\n        \"security_systems\": \"quantum_secured\",\n        \"3d_visualization\": \"immersive_ready\"\n    }\nEOF\nuvicorn main:app --host 0.0.0.0 --port 8000"]
        envFrom:
        - configMapRef:
            name: aia-minimal-config
        - secretRef:
            name: aia-minimal-secrets
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: aia-minimal-backend
  namespace: aia-minimal-neural
  labels:
    app: aia-minimal-backend
spec:
  selector:
    app: aia-minimal-backend
  ports:
  - port: 80
    targetPort: 8000
    name: http
  type: ClusterIP
---
# Simple React frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-minimal-frontend
  namespace: aia-minimal-neural
  labels:
    app: aia-minimal-frontend
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aia-minimal-frontend
  template:
    metadata:
      labels:
        app: aia-minimal-frontend
        tier: frontend
    spec:
      containers:
      - name: aia-frontend
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
          name: http
        command: ["/bin/sh"]
        args: ["-c", "echo '<!DOCTYPE html><html><head><title>AIA Neural Intelligence</title><style>body{font-family:Arial,sans-serif;margin:0;padding:20px;background:linear-gradient(135deg,#1a1a2e,#16213e,#0f3460);color:white;min-height:100vh}.container{max-width:800px;margin:0 auto;text-align:center}.logo{font-size:3em;margin-bottom:20px;background:linear-gradient(45deg,#00ff88,#00d4aa);-webkit-background-clip:text;-webkit-text-fill-color:transparent}.status{background:rgba(0,255,136,0.1);border:1px solid #00ff88;padding:20px;border-radius:10px;margin:20px 0}.feature{background:rgba(255,255,255,0.05);padding:15px;margin:10px;border-radius:8px}.neural-indicator{display:inline-block;width:10px;height:10px;background:#00ff88;border-radius:50%;animation:pulse 2s infinite}@keyframes pulse{0%{opacity:1}50%{opacity:0.3}100%{opacity:1}}</style></head><body><div class=\"container\"><h1 class=\"logo\">‚ö° AIA Neural Intelligence</h1><div class=\"status\"><h2>üß† Neural Systems Status</h2><p><span class=\"neural-indicator\"></span> U-DKG Coordination: Active</p><p><span class=\"neural-indicator\"></span> Cognitive Adaptation: Operational</p><p><span class=\"neural-indicator\"></span> Multi-Agent Orchestration: Online</p></div><div class=\"feature\"><h3>üéØ Enterprise Analytics</h3><p>Fortune 500 integrated analytics platform with real-time processing</p></div><div class=\"feature\"><h3>üîí Quantum Security</h3><p>Advanced cryptographic protection with behavioral analytics</p></div><div class=\"feature\"><h3>üåê 3D Visualization</h3><p>Immersive data visualization with WebXR capabilities</p></div><div class=\"feature\"><h3>üí≥ Payment Integration</h3><p>Secure Stripe integration with EU compliance</p></div></div></body></html>' > /usr/share/nginx/html/index.html && nginx -g \"daemon off;\""]
        envFrom:
        - configMapRef:
            name: aia-minimal-config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: aia-minimal-frontend
  namespace: aia-minimal-neural
  labels:
    app: aia-minimal-frontend
spec:
  selector:
    app: aia-minimal-frontend
  ports:
  - port: 80
    targetPort: 80
    name: http
  type: ClusterIP
---
# Load Balancer Service to get external access
apiVersion: v1
kind: Service
metadata:
  name: aia-minimal-loadbalancer
  namespace: aia-minimal-neural
  labels:
    app: aia-minimal-loadbalancer
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: aia-minimal-frontend
  ports:
  - port: 80
    targetPort: 80
    name: http
---
# Ingress with SSL
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aia-minimal-ingress
  namespace: aia-minimal-neural
  annotations:
    kubernetes.io/ingress.global-static-ip-name: aia-neural-global-ip
    kubernetes.io/ingress.class: gce
    ingress.gcp.io/load-balancer-type: "External"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - "013a.tech"
    - "www.013a.tech"
    - "api.013a.tech"
    secretName: aia-minimal-tls
  rules:
  - host: "013a.tech"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-minimal-frontend
            port:
              number: 80
  - host: "www.013a.tech"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-minimal-frontend
            port:
              number: 80
  - host: "api.013a.tech"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-minimal-backend
            port:
              number: 80
---
# SSL Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: aia-minimal-tls
  namespace: aia-minimal-neural
spec:
  secretName: aia-minimal-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - "013a.tech"
  - "www.013a.tech"
  - "api.013a.tech"