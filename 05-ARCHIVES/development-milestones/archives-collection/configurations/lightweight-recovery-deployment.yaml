# AIA Lightweight Recovery Deployment
# Minimal resource consumption for quota-constrained environment
apiVersion: v1
kind: Namespace
metadata:
  name: aia-recovery
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-backend-minimal
  namespace: aia-recovery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aia-backend-minimal
  template:
    metadata:
      labels:
        app: aia-backend-minimal
    spec:
      containers:
      - name: backend
        image: python:3.12-slim
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          value: "8000"
        command: ["/bin/sh"]
        args: ["-c", "pip install fastapi uvicorn PyJWT cryptography && python -c 'from fastapi import FastAPI; app = FastAPI(); @app.get(\"/health\") ; def health(): return {\"status\": \"healthy\"}; import uvicorn; uvicorn.run(app, host=\"0.0.0.0\", port=8000)'"]
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: aia-backend-minimal-service
  namespace: aia-recovery
spec:
  selector:
    app: aia-backend-minimal
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aia-recovery-ingress
  namespace: aia-recovery
  annotations:
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
  - host: recovery.013a.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-backend-minimal-service
            port:
              number: 80