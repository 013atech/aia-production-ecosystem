# üöÄ AIA ULTIMATE CLEAN SLATE PRODUCTION DEPLOYMENT
# Cryptography Agent Leading - Final Production Go-Live
# Date: October 3, 2025
#
# MISSION: Complete clean slate production deployment with enterprise capabilities
# VALUE: $25M+ enterprise partnerships with quantum-enhanced security

apiVersion: v1
kind: Namespace
metadata:
  name: aia-ultimate-production
  labels:
    environment: production
    deployment: clean-slate
    security: quantum-enhanced
---
# üîê QUANTUM-ENHANCED SECURITY CONFIGURATION
apiVersion: v1
kind: ConfigMap
metadata:
  name: aia-ultimate-security-config
  namespace: aia-ultimate-production
data:
  ENABLE_POST_QUANTUM_CRYPTO: "true"
  PQC_ALGORITHM: "kyber1024"
  CRYPTO_MASTER_KEY_ROTATION: "86400"
  SECURITY_LEVEL: "enterprise"
  ZERO_TRUST_MODE: "enabled"
---
# üí∞ STRIPE PRODUCTION PAYMENT CONFIGURATION
apiVersion: v1
kind: Secret
metadata:
  name: aia-ultimate-payment-secrets
  namespace: aia-ultimate-production
type: Opaque
stringData:
  STRIPE_SECRET_KEY: "[STRIPE_KEY_PLACEHOLDER]"
  STRIPE_PUBLISHABLE_KEY: "pk_live_placeholder_REPLACE_WITH_LIVE_KEY"
  STRIPE_WEBHOOK_SECRET: "whsec_placeholder_REPLACE_WITH_WEBHOOK_SECRET"
  PAYMENT_ENCRYPTION_KEY: "quantum-enhanced-payment-key-32-bytes"
---
# üè¢ ENTERPRISE PARTNERSHIP SECRETS
apiVersion: v1
kind: Secret
metadata:
  name: aia-ultimate-enterprise-secrets
  namespace: aia-ultimate-production
type: Opaque
stringData:
  EY_PARTNER_API_KEY: "ey_global_8_5m_partnership_key"
  JPMORGAN_PARTNER_API_KEY: "jpmorgan_12m_financial_ai_key"
  GOOGLE_CLOUD_PARTNER_KEY: "gcp_3_5m_marketplace_key"
  APPLE_VISION_PRO_KEY: "apple_1m_spatial_analytics_key"
---
# üß† KNOWLEDGE GRAPH CONFIGURATION
apiVersion: v1
kind: ConfigMap
metadata:
  name: aia-ultimate-knowledge-config
  namespace: aia-ultimate-production
data:
  KNOWLEDGE_GRAPH_VERSION: "v2.0"
  ATOMIC_UNITS_COUNT: "2472"
  KNOWLEDGE_SIZE_MB: "241.4"
  PROCESSING_MODE: "real-time"
  DKG_ENCRYPTION: "enabled"
---
# üêò PRODUCTION DATABASE DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-ultimate-postgres
  namespace: aia-ultimate-production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aia-ultimate-postgres
  template:
    metadata:
      labels:
        app: aia-ultimate-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "aia_ultimate_production"
        - name: POSTGRES_USER
          value: "aia_ultimate_user"
        - name: POSTGRES_PASSWORD
          value: "quantum_secured_password_2025"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: aia-ultimate-production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: standard-rwo
---
apiVersion: v1
kind: Service
metadata:
  name: aia-ultimate-postgres-service
  namespace: aia-ultimate-production
spec:
  selector:
    app: aia-ultimate-postgres
  ports:
  - port: 5432
    targetPort: 5432
---
# üîÑ REDIS CACHE DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-ultimate-redis
  namespace: aia-ultimate-production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aia-ultimate-redis
  template:
    metadata:
      labels:
        app: aia-ultimate-redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command: ["redis-server", "--requirepass", "quantum_secured_redis_2025"]
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: aia-ultimate-redis-service
  namespace: aia-ultimate-production
spec:
  selector:
    app: aia-ultimate-redis
  ports:
  - port: 6379
    targetPort: 6379
---
# üöÄ ULTIMATE BACKEND API DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-ultimate-backend
  namespace: aia-ultimate-production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aia-ultimate-backend
  template:
    metadata:
      labels:
        app: aia-ultimate-backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: backend
        image: gcr.io/aia-system-prod-1759055445/aia-api:latest
        ports:
        - containerPort: 8000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          value: "postgresql://aia_ultimate_user:quantum_secured_password_2025@aia-ultimate-postgres-service:5432/aia_ultimate_production"
        - name: REDIS_URL
          value: "redis://:quantum_secured_redis_2025@aia-ultimate-redis-service:6379/0"
        - name: ENABLE_POST_QUANTUM_CRYPTO
          valueFrom:
            configMapKeyRef:
              name: aia-ultimate-security-config
              key: ENABLE_POST_QUANTUM_CRYPTO
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: aia-ultimate-payment-secrets
              key: STRIPE_SECRET_KEY
        - name: EY_PARTNER_API_KEY
          valueFrom:
            secretKeyRef:
              name: aia-ultimate-enterprise-secrets
              key: EY_PARTNER_API_KEY
        - name: JPMORGAN_PARTNER_API_KEY
          valueFrom:
            secretKeyRef:
              name: aia-ultimate-enterprise-secrets
              key: JPMORGAN_PARTNER_API_KEY
        - name: KNOWLEDGE_GRAPH_VERSION
          valueFrom:
            configMapKeyRef:
              name: aia-ultimate-knowledge-config
              key: KNOWLEDGE_GRAPH_VERSION
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 45
          periodSeconds: 20
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: aia-ultimate-backend-service
  namespace: aia-ultimate-production
spec:
  selector:
    app: aia-ultimate-backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP
---
# üé® ULTIMATE 3D FRONTEND DEPLOYMENT (87 Components)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-ultimate-frontend
  namespace: aia-ultimate-production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: aia-ultimate-frontend
  template:
    metadata:
      labels:
        app: aia-ultimate-frontend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: frontend
        image: gcr.io/aia-system-prod-1759055445/aia-frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: REACT_APP_ENV
          value: "production"
        - name: REACT_APP_API_BASE_URL
          value: "https://api.013a.tech"
        - name: REACT_APP_WS_URL
          value: "wss://api.013a.tech/ws"
        - name: REACT_APP_STRIPE_PUBLISHABLE_KEY
          valueFrom:
            secretKeyRef:
              name: aia-ultimate-payment-secrets
              key: STRIPE_PUBLISHABLE_KEY
        - name: REACT_APP_ENABLE_3D_ANALYTICS
          value: "true"
        - name: REACT_APP_ENTERPRISE_MODE
          value: "enabled"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 10
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: aia-ultimate-frontend-service
  namespace: aia-ultimate-production
spec:
  selector:
    app: aia-ultimate-frontend
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
# ü§ñ MULTI-AGENT ORCHESTRATION SYSTEM (106 Python Modules)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-ultimate-orchestrator
  namespace: aia-ultimate-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aia-ultimate-orchestrator
  template:
    metadata:
      labels:
        app: aia-ultimate-orchestrator
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: orchestrator
        image: gcr.io/aia-system-prod-1759055445/aia-cognitive-processor:latest
        ports:
        - containerPort: 9000
        env:
        - name: ORCHESTRATION_MODE
          value: "production"
        - name: AGENT_COUNT
          value: "106"
        - name: DATABASE_URL
          value: "postgresql://aia_ultimate_user:quantum_secured_password_2025@aia-ultimate-postgres-service:5432/aia_ultimate_production"
        - name: REDIS_URL
          value: "redis://:quantum_secured_redis_2025@aia-ultimate-redis-service:6379/1"
        - name: KNOWLEDGE_PROCESSING_MODE
          valueFrom:
            configMapKeyRef:
              name: aia-ultimate-knowledge-config
              key: PROCESSING_MODE
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: aia-ultimate-orchestrator-service
  namespace: aia-ultimate-production
spec:
  selector:
    app: aia-ultimate-orchestrator
  ports:
  - port: 9000
    targetPort: 9000
  type: ClusterIP
---
# üåê UNIFIED PRODUCTION INGRESS WITH SSL
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aia-ultimate-ingress
  namespace: aia-ultimate-production
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "aia-ultimate-ip"
    networking.gke.io/managed-certificates: "aia-ultimate-ssl-cert"
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
  - host: 013a.tech
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: aia-ultimate-backend-service
            port:
              number: 8000
      - path: /orchestration
        pathType: Prefix
        backend:
          service:
            name: aia-ultimate-orchestrator-service
            port:
              number: 9000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-ultimate-frontend-service
            port:
              number: 80
  - host: api.013a.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-ultimate-backend-service
            port:
              number: 8000
  - host: app.013a.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aia-ultimate-frontend-service
            port:
              number: 80
---
# üîí GOOGLE-MANAGED SSL CERTIFICATE
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: aia-ultimate-ssl-cert
  namespace: aia-ultimate-production
spec:
  domains:
  - "013a.tech"
  - "api.013a.tech"
  - "app.013a.tech"
  - "enterprise.013a.tech"
---
# üè¢ ENTERPRISE PARTNER INTEGRATION SERVICE
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-ultimate-enterprise-partners
  namespace: aia-ultimate-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aia-ultimate-enterprise-partners
  template:
    metadata:
      labels:
        app: aia-ultimate-enterprise-partners
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: enterprise-partners
        image: gcr.io/aia-system-prod-1759055445/aia-biometric-processor:latest
        ports:
        - containerPort: 8090
        env:
        - name: PARTNERSHIP_MODE
          value: "production"
        - name: EY_PARTNERSHIP_VALUE
          value: "8500000"  # $8.5M
        - name: JPMORGAN_PARTNERSHIP_VALUE
          value: "12000000"  # $12M
        - name: GOOGLE_CLOUD_PARTNERSHIP_VALUE
          value: "3500000"  # $3.5M
        - name: APPLE_PARTNERSHIP_VALUE
          value: "1000000"  # $1M
        - name: EY_PARTNER_API_KEY
          valueFrom:
            secretKeyRef:
              name: aia-ultimate-enterprise-secrets
              key: EY_PARTNER_API_KEY
        - name: JPMORGAN_PARTNER_API_KEY
          valueFrom:
            secretKeyRef:
              name: aia-ultimate-enterprise-secrets
              key: JPMORGAN_PARTNER_API_KEY
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: aia-ultimate-enterprise-service
  namespace: aia-ultimate-production
spec:
  selector:
    app: aia-ultimate-enterprise-partners
  ports:
  - port: 8090
    targetPort: 8090
  type: ClusterIP
---
# üìä MONITORING AND OBSERVABILITY
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aia-ultimate-monitoring
  namespace: aia-ultimate-production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aia-ultimate-monitoring
  template:
    metadata:
      labels:
        app: aia-ultimate-monitoring
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "quantum_secured_grafana_2025"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: aia-ultimate-monitoring-service
  namespace: aia-ultimate-production
spec:
  selector:
    app: aia-ultimate-monitoring
  ports:
  - port: 9090
    targetPort: 9090
    name: prometheus
  - port: 3000
    targetPort: 3000
    name: grafana
  type: NodePort
---
# ‚ö° HORIZONTAL POD AUTOSCALER
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: aia-ultimate-backend-hpa
  namespace: aia-ultimate-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aia-ultimate-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: aia-ultimate-frontend-hpa
  namespace: aia-ultimate-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aia-ultimate-frontend
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
# üîí NETWORK SECURITY POLICIES
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: aia-ultimate-network-policy
  namespace: aia-ultimate-production
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: aia-ultimate-production
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 9000
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: aia-ultimate-production
    ports:
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
---
# üíæ POD DISRUPTION BUDGETS
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: aia-ultimate-backend-pdb
  namespace: aia-ultimate-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: aia-ultimate-backend
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: aia-ultimate-frontend-pdb
  namespace: aia-ultimate-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: aia-ultimate-frontend
---
# üîÑ BACKUP AND DISASTER RECOVERY
apiVersion: batch/v1
kind: CronJob
metadata:
  name: aia-ultimate-database-backup
  namespace: aia-ultimate-production
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: postgres-backup
            image: postgres:15-alpine
            command:
            - /bin/sh
            - -c
            - |
              PGPASSWORD=quantum_secured_password_2025 pg_dump -h aia-ultimate-postgres-service -U aia_ultimate_user -d aia_ultimate_production > /backup/aia_backup_$(date +%Y%m%d_%H%M%S).sql
              gsutil cp /backup/*.sql gs://aia-production-backups/database/
            volumeMounts:
            - name: backup-volume
              mountPath: /backup
            env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/key.json
          volumes:
          - name: backup-volume
            emptyDir: {}
          restartPolicy: OnFailure
---
# üéØ BUSINESS INTELLIGENCE AUTOMATION
apiVersion: batch/v1
kind: CronJob
metadata:
  name: aia-ultimate-business-optimization
  namespace: aia-ultimate-production
spec:
  schedule: "0 */4 * * *"  # Every 4 hours
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: business-optimizer
            image: gcr.io/aia-system-prod-1759055445/aia-websocket-server:latest
            env:
            - name: OPTIMIZATION_MODE
              value: "enterprise"
            - name: PARTNERSHIP_MONITORING
              value: "enabled"
            - name: REVENUE_OPTIMIZATION
              value: "active"
            command:
            - /bin/sh
            - -c
            - |
              echo "üöÄ Running Business Intelligence Optimization..."
              python /app/business_optimizer.py --mode=enterprise
              echo "‚úÖ Business optimization complete"
          restartPolicy: OnFailure