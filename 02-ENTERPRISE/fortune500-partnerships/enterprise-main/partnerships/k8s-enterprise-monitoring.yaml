apiVersion: v1
kind: Namespace
metadata:
  name: aia-monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-enterprise
  namespace: aia-monitoring
  labels:
    app: prometheus
    tier: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        tier: monitoring
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: aia-monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "first_rules.yml"

    scrape_configs:
    - job_name: 'aia-enterprise'
      static_configs:
      - targets: ['aia-enterprise-service.aia-enterprise-ecosystem.svc.cluster.local:80']

    - job_name: 'aia-redis'
      static_configs:
      - targets: ['aia-redis.aia-enterprise-ecosystem.svc.cluster.local:6379']

    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - aia-enterprise-ecosystem
          - aia-monitoring
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-enterprise
  namespace: aia-monitoring
  labels:
    app: grafana
    tier: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        tier: monitoring
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "aia-enterprise-2025"
        - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
          value: "/var/lib/grafana/dashboards/aia-dashboard.json"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: aia-monitoring
data:
  aia-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "AIA Enterprise 45-Domain Analytics",
        "tags": ["aia", "enterprise", "analytics"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Domain Response Times",
            "type": "graph",
            "targets": [
              {
                "expr": "http_request_duration_seconds",
                "refId": "A"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Active Domains",
            "type": "stat",
            "targets": [
              {
                "expr": "count(up == 1)",
                "refId": "B"
              }
            ],
            "gridPos": {"h": 4, "w": 6, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Revenue by Domain",
            "type": "bargauge",
            "targets": [
              {
                "expr": "aia_revenue_total",
                "refId": "C"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "30s"
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: aia-monitoring
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: aia-monitoring
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aia-monitoring-ingress
  namespace: aia-monitoring
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "aia-global-ip"
spec:
  rules:
  - host: monitoring.013a.tech
    http:
      paths:
      - path: /grafana/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
      - path: /prometheus/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090